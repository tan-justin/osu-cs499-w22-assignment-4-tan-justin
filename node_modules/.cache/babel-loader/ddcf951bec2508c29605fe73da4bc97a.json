{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY, ADJ_QUANTITY } from \"./action\";\nconst initialStateProducts = {\n  products: []\n};\nconst initialStateCart = {\n  cart: []\n};\n\nfunction candyStoreReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateProducts;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCT:\n      return {\n        products: [...state.products, {\n          name: action.name,\n          id: action.id,\n          price: action.price,\n          inStock: action.inStock,\n          photoUrl: action.photoUrl\n        }]\n      };\n\n    case GET_QUANTITY:\n      return { ...state,\n        products: state.products.map(item => item.id === action.id.id ? { ...item,\n          inStock: item.inStock - action.quantity\n        } : item)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction shoppingCartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADJ_QUANTITY:\n      return {\n        cart: [console.log(state), ...state.cart, {\n          id: action.id.id,\n          name: action.id.name,\n          price: action.id.price,\n          quantity: action.quantity,\n          img: action.id.img\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  candyStore: candyStoreReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-4-tan-justin/src/Redux/reducer.js"],"names":["combineReducers","RECEIVE_PRODUCT","RECEIVE_PRODUCT_STATUS","CHECK_OUT","GET_QUANTITY","ADJ_QUANTITY","initialStateProducts","products","initialStateCart","cart","candyStoreReducer","state","action","type","name","id","price","inStock","photoUrl","map","item","quantity","shoppingCartReducer","console","log","img","rootReducer","candyStore"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,SAAlD,EAA6DC,YAA7D,EAA2EC,YAA3E,QAA+F,UAA/F;AAEA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,QAAQ,EAAC;AADgB,CAA7B;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAE;AADe,CAAzB;;AAKA,SAASC,iBAAT,GAAgE;AAAA,MAArCC,KAAqC,uEAA7BL,oBAA6B;AAAA,MAAPM,MAAO;;AAE5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,eAAL;AACI,aAAM;AACFM,QAAAA,QAAQ,EACR,CAAC,GAAGI,KAAK,CAACJ,QAAV,EACA;AACGO,UAAAA,IAAI,EAAEF,MAAM,CAACE,IADhB;AAEGC,UAAAA,EAAE,EAAEH,MAAM,CAACG,EAFd;AAGGC,UAAAA,KAAK,EAAEJ,MAAM,CAACI,KAHjB;AAIGC,UAAAA,OAAO,EAAEL,MAAM,CAACK,OAJnB;AAKGC,UAAAA,QAAQ,EAAEN,MAAM,CAACM;AALpB,SADA;AAFE,OAAN;;AAWJ,SAAKd,YAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeY,GAAf,CAAoBC,IAAD,IACzBA,IAAI,CAACL,EAAL,KAAYH,MAAM,CAACG,EAAP,CAAUA,EAAtB,GAA2B,EACvB,GAAGK,IADoB;AAEvBH,UAAAA,OAAO,EAAEG,IAAI,CAACH,OAAL,GAAeL,MAAM,CAACS;AAFR,SAA3B,GAGID,IAJE;AAFP,OAAP;;AASJ;AACI,aAAOT,KAAP;AAxBR;AA0BH;;AAED,SAASW,mBAAT,GAA8D;AAAA,MAAjCX,KAAiC,uEAAzBH,gBAAyB;AAAA,MAAPI,MAAO;;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,YAAL;AACI,aAAO;AACHI,QAAAA,IAAI,EACJ,CACIc,OAAO,CAACC,GAAR,CAAYb,KAAZ,CADJ,EAEI,GAAGA,KAAK,CAACF,IAFb,EAGI;AACIM,UAAAA,EAAE,EAAEH,MAAM,CAACG,EAAP,CAAUA,EADlB;AAEID,UAAAA,IAAI,EAAEF,MAAM,CAACG,EAAP,CAAUD,IAFpB;AAGIE,UAAAA,KAAK,EAAEJ,MAAM,CAACG,EAAP,CAAUC,KAHrB;AAIIK,UAAAA,QAAQ,EAAET,MAAM,CAACS,QAJrB;AAKII,UAAAA,GAAG,EAAEb,MAAM,CAACG,EAAP,CAAUU;AALnB,SAHJ;AAFG,OAAP;;AAcJ;AACI,aAAOd,KAAP;AAjBR;AAoBH;;AAED,MAAMe,WAAW,GAAG1B,eAAe,CAAC;AAChC2B,EAAAA,UAAU,EAAEjB;AADoB,CAAD,CAAnC;AAIA,eAAegB,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY, ADJ_QUANTITY } from \"./action\";\n\nconst initialStateProducts = {\n    products:[],\n}\nconst initialStateCart = {\n    cart: [],\n}\n\n\nfunction candyStoreReducer(state = initialStateProducts, action){\n\n    switch(action.type){\n        case RECEIVE_PRODUCT:\n            return{\n                products:\n                [...state.products,\n                {\n                   name: action.name,\n                   id: action.id,\n                   price: action.price,\n                   inStock: action.inStock,\n                   photoUrl: action.photoUrl\n                }\n            ]}\n        case GET_QUANTITY:\n            return {\n                ...state,\n                products: state.products.map((item)=>(\n                    item.id === action.id.id ? {\n                        ...item,\n                        inStock: item.inStock - action.quantity,\n                    } : item\n                ))\n            }\n        default:\n            return state;\n    }\n}\n\nfunction shoppingCartReducer(state = initialStateCart, action){\n    switch(action.type){\n        case ADJ_QUANTITY:\n            return {\n                cart: \n                [\n                    console.log(state),\n                    ...state.cart,\n                    {\n                        id: action.id.id,\n                        name: action.id.name,\n                        price: action.id.price,\n                        quantity: action.quantity,\n                        img: action.id.img\n                    }\n                ]\n            }\n        default:\n            return state;\n    }\n\n}\n\nconst rootReducer = combineReducers({\n    candyStore: candyStoreReducer,  \n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}