{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY, ADJ_QUANTITY } from \"./action\";\nconst initialState = {\n  products: [],\n  cart: [],\n  currentItem: null\n};\nlet cartID = -1;\n\nfunction candyStoreReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCT:\n      console.log(state);\n      return {\n        products: [...state.products, {\n          name: action.name,\n          id: action.id,\n          price: action.price,\n          inStock: action.inStock,\n          photoUrl: action.photoUrl\n        }]\n      };\n\n    case GET_QUANTITY:\n      return { ...state,\n        products: state.products.map(item => item.id === action.id.id ? { ...item,\n          inStock: item.inStock - action.quantity\n        } : item)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction shoppingCartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADJ_QUANTITY:\n      return {\n        cart: [console.log(state), ...state.cart, {\n          id: action.id.id,\n          name: action.id.name,\n          price: action.id.price,\n          quantity: action.quantity,\n          img: action.id.img\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  candyStore: candyStoreReducer,\n  cartStore: shoppingCartReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-4-tan-justin/src/Redux/reducer.js"],"names":["combineReducers","RECEIVE_PRODUCT","RECEIVE_PRODUCT_STATUS","CHECK_OUT","GET_QUANTITY","ADJ_QUANTITY","initialState","products","cart","currentItem","cartID","candyStoreReducer","state","action","type","console","log","name","id","price","inStock","photoUrl","map","item","quantity","shoppingCartReducer","img","rootReducer","candyStore","cartStore"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,SAAlD,EAA6DC,YAA7D,EAA2EC,YAA3E,QAA+F,UAA/F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;AAKA,IAAIC,MAAM,GAAG,CAAC,CAAd;;AAEA,SAASC,iBAAT,GAAwD;AAAA,MAA7BC,KAA6B,uEAArBN,YAAqB;AAAA,MAAPO,MAAO;;AAEpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,eAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,aAAM;AACFL,QAAAA,QAAQ,EACR,CAAC,GAAGK,KAAK,CAACL,QAAV,EACA;AACGU,UAAAA,IAAI,EAAEJ,MAAM,CAACI,IADhB;AAEGC,UAAAA,EAAE,EAAEL,MAAM,CAACK,EAFd;AAGGC,UAAAA,KAAK,EAAEN,MAAM,CAACM,KAHjB;AAIGC,UAAAA,OAAO,EAAEP,MAAM,CAACO,OAJnB;AAKGC,UAAAA,QAAQ,EAAER,MAAM,CAACQ;AALpB,SADA;AAFE,OAAN;;AAWJ,SAAKjB,YAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAee,GAAf,CAAoBC,IAAD,IACzBA,IAAI,CAACL,EAAL,KAAYL,MAAM,CAACK,EAAP,CAAUA,EAAtB,GAA2B,EACvB,GAAGK,IADoB;AAEvBH,UAAAA,OAAO,EAAEG,IAAI,CAACH,OAAL,GAAeP,MAAM,CAACW;AAFR,SAA3B,GAGID,IAJE;AAFP,OAAP;;AAUJ;AACI,aAAOX,KAAP;AA1BR;AA4BH;;AAED,SAASa,mBAAT,GAA0D;AAAA,MAA7Bb,KAA6B,uEAArBN,YAAqB;AAAA,MAAPO,MAAO;;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,YAAL;AACI,aAAO;AACHG,QAAAA,IAAI,EACJ,CACIO,OAAO,CAACC,GAAR,CAAYJ,KAAZ,CADJ,EAEI,GAAGA,KAAK,CAACJ,IAFb,EAGI;AACIU,UAAAA,EAAE,EAAEL,MAAM,CAACK,EAAP,CAAUA,EADlB;AAEID,UAAAA,IAAI,EAAEJ,MAAM,CAACK,EAAP,CAAUD,IAFpB;AAGIE,UAAAA,KAAK,EAAEN,MAAM,CAACK,EAAP,CAAUC,KAHrB;AAIIK,UAAAA,QAAQ,EAAEX,MAAM,CAACW,QAJrB;AAKIE,UAAAA,GAAG,EAAEb,MAAM,CAACK,EAAP,CAAUQ;AALnB,SAHJ;AAFG,OAAP;;AAcJ;AACI,aAAOd,KAAP;AAjBR;AAoBH;;AAED,MAAMe,WAAW,GAAG3B,eAAe,CAAC;AAChC4B,EAAAA,UAAU,EAAEjB,iBADoB;AAEhCkB,EAAAA,SAAS,EAAEJ;AAFqB,CAAD,CAAnC;AAKA,eAAeE,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY, ADJ_QUANTITY } from \"./action\";\n\nconst initialState = {\n    products:[],\n    cart: [], \n    currentItem: null,\n}\nlet cartID = -1;\n\nfunction candyStoreReducer(state = initialState, action){\n\n    switch(action.type){\n        case RECEIVE_PRODUCT:\n            console.log(state)\n            return{\n                products:\n                [...state.products,\n                {\n                   name: action.name,\n                   id: action.id,\n                   price: action.price,\n                   inStock: action.inStock,\n                   photoUrl: action.photoUrl\n                }\n            ]}\n        case GET_QUANTITY:\n            return {\n                ...state,\n                products: state.products.map((item)=>(\n                    item.id === action.id.id ? {\n                        ...item,\n                        inStock: item.inStock - action.quantity,\n                    } : item\n                ))\n            }\n\n        default:\n            return state;\n    }\n}\n\nfunction shoppingCartReducer(state = initialState, action){\n    switch(action.type){\n        case ADJ_QUANTITY:\n            return {\n                cart: \n                [\n                    console.log(state),\n                    ...state.cart,\n                    {\n                        id: action.id.id,\n                        name: action.id.name,\n                        price: action.id.price,\n                        quantity: action.quantity,\n                        img: action.id.img\n                    }\n                ]\n            }\n        default:\n            return state;\n    }\n\n}\n\nconst rootReducer = combineReducers({\n    candyStore: candyStoreReducer,  \n    cartStore: shoppingCartReducer,\n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}