{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY } from \"./action\";\nconst initialState = {\n  products: [],\n  cart: [],\n  currentItem: null\n};\n\nfunction candyStoreReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.products;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCT:\n      return [...state, {\n        name: action.name,\n        id: action.id,\n        price: action.price,\n        inStock: action.inStock,\n        photoUrl: action.photoUrl\n      }];\n\n    default:\n      return state;\n  }\n}\n\nfunction quantityReducer(state, action) {\n  switch (action.type) {\n    case GET_QUANTITY:\n      return state.map(store => store.id === action.id ? { ...state,\n        inStock: store.inStock - action.quantity\n      } : store);\n\n    default:\n      return state;\n  }\n}\n\nfunction shoppingCartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHECK_OUT:\n      return [...state, {}];\n  }\n}\n\nconst rootReducer = combineReducers({\n  candyStore: candyStoreReducer,\n  stockDecrease: quantityReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-4-tan-justin/src/Redux/reducer.js"],"names":["combineReducers","RECEIVE_PRODUCT","RECEIVE_PRODUCT_STATUS","CHECK_OUT","GET_QUANTITY","initialState","products","cart","currentItem","candyStoreReducer","state","action","type","name","id","price","inStock","photoUrl","quantityReducer","map","store","quantity","shoppingCartReducer","rootReducer","candyStore","stockDecrease"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,SAAlD,EAA6DC,YAA7D,QAAiF,UAAjF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;;AAMA,SAASC,iBAAT,GAAiE;AAAA,MAAtCC,KAAsC,uEAA9BL,YAAY,CAACC,QAAiB;AAAA,MAAPK,MAAO;;AAE7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,eAAL;AACI,aAAM,CACF,GAAGS,KADD,EAEF;AACGG,QAAAA,IAAI,EAAEF,MAAM,CAACE,IADhB;AAEGC,QAAAA,EAAE,EAAEH,MAAM,CAACG,EAFd;AAGGC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAHjB;AAIGC,QAAAA,OAAO,EAAEL,MAAM,CAACK,OAJnB;AAKGC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AALpB,OAFE,CAAN;;AAUJ;AACI,aAAOP,KAAP;AAbR;AAeH;;AAED,SAASQ,eAAT,CAAyBR,KAAzB,EAAgCC,MAAhC,EAAuC;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,YAAL;AACI,aAAOM,KAAK,CAACS,GAAN,CAAUC,KAAK,IAClBA,KAAK,CAACN,EAAN,KAAaH,MAAM,CAACG,EAApB,GAAyB,EACrB,GAAGJ,KADkB;AAErBM,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBL,MAAM,CAACU;AAFX,OAAzB,GAGID,KAJD,CAAP;;AAMJ;AACI,aAAOV,KAAP;AATR;AAWH;;AAED,SAASY,mBAAT,GAAgD;AAAA,MAAnBZ,KAAmB,uEAAX,EAAW;AAAA,MAAPC,MAAO;;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,SAAL;AACI,aAAM,CACF,GAAGO,KADD,EAEF,EAFE,CAAN;AAFR;AAWH;;AAED,MAAMa,WAAW,GAAGvB,eAAe,CAAC;AAChCwB,EAAAA,UAAU,EAAEf,iBADoB;AAEhCgB,EAAAA,aAAa,EAAEP;AAFiB,CAAD,CAAnC;AAKA,eAAeK,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY } from \"./action\";\n\nconst initialState = {\n    products: [],\n    cart: [], \n    currentItem: null,\n}\n\nfunction candyStoreReducer(state = initialState.products, action){\n\n    switch(action.type){\n        case RECEIVE_PRODUCT:\n            return[\n                ...state,\n                {\n                   name: action.name,\n                   id: action.id,\n                   price: action.price,\n                   inStock: action.inStock,\n                   photoUrl: action.photoUrl\n                }\n            ]\n        default:\n            return state;\n    }\n}\n\nfunction quantityReducer(state, action){\n    switch(action.type){\n        case GET_QUANTITY:\n            return state.map(store=>(\n                store.id === action.id ? {\n                    ...state,\n                    inStock: store.inStock - action.quantity,\n                } : store\n            ))\n        default: \n            return state;\n    }\n}\n\nfunction shoppingCartReducer(state = [], action){\n    switch(action.type){\n        case CHECK_OUT:\n            return[\n                ...state,\n                {\n                    \n\n                }\n            ]\n    }\n\n}\n\nconst rootReducer = combineReducers({\n    candyStore: candyStoreReducer,  \n    stockDecrease: quantityReducer, \n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}