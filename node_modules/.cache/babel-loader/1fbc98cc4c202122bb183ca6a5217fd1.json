{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY, ADJ_QUANTITY } from \"./action\";\nconst initialState = {\n  products: [],\n  cart: [],\n  currentItem: null\n};\n\nfunction candyStoreReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCT:\n      return {\n        products: [...state.products, {\n          name: action.name,\n          id: action.id,\n          price: action.price,\n          inStock: action.inStock,\n          photoUrl: action.photoUrl\n        }]\n      };\n\n    case GET_QUANTITY:\n      return { ...state,\n        products: state.products.map(item => (console.log(item.id === action.id), item.id === action.id ? { ...item,\n          inStock: item.inStock - action.quantity\n        } : item))\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction quantityReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nfunction shoppingCartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHECK_OUT:\n      return [...state, {}];\n  }\n}\n\nconst rootReducer = combineReducers({\n  candyStore: candyStoreReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-4-tan-justin/src/Redux/reducer.js"],"names":["combineReducers","RECEIVE_PRODUCT","RECEIVE_PRODUCT_STATUS","CHECK_OUT","GET_QUANTITY","ADJ_QUANTITY","initialState","products","cart","currentItem","candyStoreReducer","state","action","type","name","id","price","inStock","photoUrl","map","item","console","log","quantity","quantityReducer","shoppingCartReducer","rootReducer","candyStore"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,SAAlD,EAA6DC,YAA7D,EAA2EC,YAA3E,QAA+F,UAA/F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC,EADQ;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;;AAMA,SAASC,iBAAT,GAAwD;AAAA,MAA7BC,KAA6B,uEAArBL,YAAqB;AAAA,MAAPM,MAAO;;AAEpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,eAAL;AACI,aAAM;AACFM,QAAAA,QAAQ,EACR,CAAC,GAAGI,KAAK,CAACJ,QAAV,EACA;AACGO,UAAAA,IAAI,EAAEF,MAAM,CAACE,IADhB;AAEGC,UAAAA,EAAE,EAAEH,MAAM,CAACG,EAFd;AAGGC,UAAAA,KAAK,EAAEJ,MAAM,CAACI,KAHjB;AAIGC,UAAAA,OAAO,EAAEL,MAAM,CAACK,OAJnB;AAKGC,UAAAA,QAAQ,EAAEN,MAAM,CAACM;AALpB,SADA;AAFE,OAAN;;AAWJ,SAAKd,YAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeY,GAAf,CAAoBC,IAAD,KACzBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,EAAL,KAAUH,MAAM,CAACG,EAA7B,GACAK,IAAI,CAACL,EAAL,KAAYH,MAAM,CAACG,EAAnB,GAAwB,EACpB,GAAGK,IADiB;AAEpBH,UAAAA,OAAO,EAAEG,IAAI,CAACH,OAAL,GAAeL,MAAM,CAACW;AAFX,SAAxB,GAGIH,IALqB,CAAnB;AAFP,OAAP;;AAUJ;AACI,aAAOT,KAAP;AAzBR;AA2BH;;AAED,SAASa,eAAT,GAAsD;AAAA,MAA7Bb,KAA6B,uEAArBL,YAAqB;AAAA,MAAPM,MAAO;;AAClD,UAAOA,MAAM,CAACC,IAAd;AAGI;AACI,aAAOF,KAAP;AAJR;AAMH;;AAED,SAASc,mBAAT,GAA+D;AAAA,MAAlCd,KAAkC,uEAA1BL,YAAY,CAACE,IAAa;AAAA,MAAPI,MAAO;;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,SAAL;AACI,aAAM,CACF,GAAGQ,KADD,EAEF,EAFE,CAAN;AAFR;AAWH;;AAED,MAAMe,WAAW,GAAG1B,eAAe,CAAC;AAChC2B,EAAAA,UAAU,EAAEjB;AADoB,CAAD,CAAnC;AAIA,eAAegB,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCT, RECEIVE_PRODUCT_STATUS, CHECK_OUT, GET_QUANTITY, ADJ_QUANTITY } from \"./action\";\n\nconst initialState = {\n    products:[],\n    cart: [], \n    currentItem: null,\n}\n\nfunction candyStoreReducer(state = initialState, action){\n\n    switch(action.type){\n        case RECEIVE_PRODUCT:\n            return{\n                products:\n                [...state.products,\n                {\n                   name: action.name,\n                   id: action.id,\n                   price: action.price,\n                   inStock: action.inStock,\n                   photoUrl: action.photoUrl\n                }\n            ]}\n        case GET_QUANTITY:\n            return {\n                ...state,\n                products: state.products.map((item)=>(\n                    console.log(item.id===action.id),\n                    item.id === action.id ? {\n                        ...item,\n                        inStock: item.inStock - action.quantity,\n                    } : item\n                ))\n            }\n        default:\n            return state;\n    }\n}\n\nfunction quantityReducer(state = initialState, action){\n    switch(action.type){\n        \n    \n        default: \n            return state;\n    }\n}\n\nfunction shoppingCartReducer(state = initialState.cart, action){\n    switch(action.type){\n        case CHECK_OUT:\n            return[\n                ...state,\n                {\n                    \n\n                }\n            ]\n    }\n\n}\n\nconst rootReducer = combineReducers({\n    candyStore: candyStoreReducer,  \n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}