{"ast":null,"code":"var _jsxFileName = \"/Users/justintan/Documents/GitHub/assignment-4-tan-justin/src/Components/DisplayItem.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { React } from 'react';\nimport useProducts from './hooks/useProducts';\nimport { useDispatch, connect } from 'react-redux';\nimport { get_quantity } from '../Redux/action';\nimport { useSelector } from 'react-redux';\nimport { css } from '@emotion/react';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nfunction DisplayItems(_ref) {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  const cardStyle = css`\n      width: 36vw;\n      height: 30vh;\n      border: 5px solid lightskyblue;\n      border-radius: 20px;\n      display: flex;\n      margin: 0;\n      flex-wrap: wrap;\n      flex-direction: column;\n      align-items: center;\n  \n    `;\n  const bodyStyle = css`\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: row;\n      justify-content: space-evenly;\n  \n    `;\n  const {\n    products,\n    isLoading\n  } = useProducts();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (products) products.map(products => dispatch(receive_product(products)));\n  }, [products]);\n  return _jsxDEV(\"div\", {\n    css: bodyStyle,\n    children: productArray.map(products => _jsxDEV(\"div\", {\n      css: cardStyle,\n      children: [_jsxDEV(\"h1\", {\n        children: products.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Price per candy: $\", products.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), _jsxDEV(\"p\", {\n        children: [\"Stock: \", products.inStock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), _jsxDEV(Counter, {\n        id: products.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), _jsxDEV(\"img\", {\n        src: products.photoUrl,\n        alt: \"penny candy\",\n        width: \"150px\",\n        height: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, products.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DisplayItems, \"/q16dk7njUH7WA7TyXG46UofM44=\", false, function () {\n  return [useProducts, useDispatch];\n});\n\n_c = DisplayItems;\n\nconst productArray = state => {\n  return {\n    product: state.candyStore.products\n  };\n};\n\nexport default connect(productArray)(DisplayItems);\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayItems\");","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-4-tan-justin/src/Components/DisplayItem.js"],"names":["React","useProducts","useDispatch","connect","get_quantity","useSelector","css","DisplayItems","product","cardStyle","bodyStyle","products","isLoading","dispatch","useEffect","map","receive_product","productArray","name","price","inStock","id","photoUrl","state","candyStore"],"mappings":";;;AAAA;AAEA,SAAQA,KAAR,QAAoB,OAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,QAAoB,gBAApB;;;AAGA,SAASC,YAAT,OAAgC;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AAE5B,QAAMC,SAAS,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXI;AAYA,QAAMI,SAAS,GAAGJ,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,KANI;AAQA,QAAM;AAACK,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBX,WAAW,EAAzC;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AAEAY,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGH,QAAH,EACEA,QAAQ,CAACI,GAAT,CAAcJ,QAAD,IAAaE,QAAQ,CAACG,eAAe,CAACL,QAAD,CAAhB,CAAlC;AACH,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAMA,SACE;AAAK,IAAA,GAAG,EAAED,SAAV;AAAA,cACGO,YAAY,CAACF,GAAb,CAAiBJ,QAAQ,IAC1B;AAAuB,MAAA,GAAG,EAAEF,SAA5B;AAAA,iBACE;AAAA,kBAAKE,QAAQ,CAACO;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA,yCAAsBP,QAAQ,CAACQ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA,8BAAWR,QAAQ,CAACS,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAET,QAAQ,CAACU;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAK,QAAA,GAAG,EAAEV,QAAQ,CAACW,QAAnB;AAA6B,QAAA,GAAG,EAAC,aAAjC;AAA+C,QAAA,KAAK,EAAC,OAArD;AAA6D,QAAA,MAAM,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUX,QAAQ,CAACU,EAAnB;AAAA;AAAA;AAAA;AAAA,YADC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA5CMd,Y;UAsByBN,W,EACbC,W;;;KAvBZK,Y;;AA8CP,MAAMU,YAAY,GAAIM,KAAD,IAAW;AAC9B,SAAM;AACJf,IAAAA,OAAO,EAAEe,KAAK,CAACC,UAAN,CAAiBb;AADtB,GAAN;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAACc,YAAD,CAAP,CAAsBV,YAAtB,CAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\n\nimport {React} from 'react'\nimport useProducts from './hooks/useProducts';\nimport { useDispatch, connect } from 'react-redux';\nimport { get_quantity } from '../Redux/action';\nimport { useSelector } from 'react-redux';\nimport { css } from '@emotion/react';\n\n\nfunction DisplayItems({product}){\n\n    const cardStyle = css`\n      width: 36vw;\n      height: 30vh;\n      border: 5px solid lightskyblue;\n      border-radius: 20px;\n      display: flex;\n      margin: 0;\n      flex-wrap: wrap;\n      flex-direction: column;\n      align-items: center;\n  \n    `\n    const bodyStyle = css`\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: row;\n      justify-content: space-evenly;\n  \n    `  \n  \n    const {products, isLoading} = useProducts();\n    const dispatch = useDispatch();\n  \n    useEffect(()=>{\n      if(products)\n        products.map((products)=> dispatch(receive_product(products))) \n    }, [products]);\n  \n  \n    return(\n      <div css={bodyStyle}>\n        {productArray.map(products=>\n        <div key={products.id} css={cardStyle}>\n          <h1>{products.name}</h1>\n          <p>Price per candy: ${products.price}</p>\n          <p>Stock: {products.inStock}</p>\n          <Counter id={products.id}/>\n          <img src={products.photoUrl} alt='penny candy' width='150px' height='150px'></img>\n        </div>\n        )}\n      </div>\n    )\n  }\n\n  const productArray = (state) => {\n    return{\n      product: state.candyStore.products\n    }\n  }\n\n  export default connect(productArray)(DisplayItems)"]},"metadata":{},"sourceType":"module"}